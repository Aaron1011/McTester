import org.gradle.api.plugins.JavaPluginConvention
import org.gradle.api.tasks.SourceSet
import org.gradle.plugins.ide.idea.model.IdeaModel

buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "https://files.minecraftforge.net/maven"
        }
        maven {
            url = "https://plugins.gradle.org/m2/"
        }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
    }
    dependencies {
        classpath "net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT"
        classpath "gradle.plugin.org.spongepowered:spongegradle:0.8.1"
        //classpath 'org.spongepowered:mixingradle:0.5-SNAPSHOT'
    }
}

plugins {
    id "com.jfrog.bintray" version "1.7.3"
}

apply plugin: "net.minecraftforge.gradle.forge"
apply plugin: "org.spongepowered.plugin"
//apply plugin: 'org.spongepowered.mixin'
apply plugin: 'idea'
apply plugin: "maven"
apply plugin: 'groovy'


version = modVersion
group = modGroup
archivesBaseName = modBaseName


bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_KEY')
    configurations = ['archives']
    pkg {
        repo = 'McTester'
        name = 'McTester'
        licenses = ['MIT']
        vcsUrl = 'https://github.com/Aaron1011/McTester'
        version {
            name = version
        }
    }
}

minecraft {
    version = project.forgeVersion
    runDir = "run"

    // the mappings can be changed at any time, and must be in the following format.
    // snapshot_YYYYMMDD   snapshot are built nightly.
    // stable_#            stables are built at the discretion of the MCP team.
    // Use non-default mappings at your own risk. they may not always work.
    // simply re-run your setup task after changing the mappings to update your workspace.
    mappings = project.mcpVersion // Must be the same as SpongeForge
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

def addGradleStart() {
    project.logger.warn("Hacking forgegradle stuff")

    def javaConv = (JavaPluginConvention) project.getConvention().getPlugins().get("java")



    def main = javaConv.getSourceSets().getByName(SourceSet.MAIN_SOURCE_SET_NAME)
    def test = javaConv.getSourceSets().getByName(SourceSet.TEST_SOURCE_SET_NAME)

    main.setCompileClasspath(main.getCompileClasspath()
                                     .plus(project.getConfigurations().getByName("forgeGradleGradleStart"))

    )
    test.setCompileClasspath(test.getCompileClasspath()
                                     .plus(project.getConfigurations().getByName("forgeGradleGradleStart"))
    )
    test.setRuntimeClasspath(test.getRuntimeClasspath()
                                     .plus(project.getConfigurations().getByName("forgeGradleGradleStart"))
    )

    def ideaConv= (IdeaModel) project.getExtensions().getByName("idea")
    ideaConv.getModule().getScopes().get("COMPILE").get("plus").add(project.getConfigurations().getByName("forgeGradleGradleStart"));
}

addGradleStart()

repositories {
    mavenCentral()

    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile 'org.spongepowered:spongeapi:7.1.0-SNAPSHOT'
    compile 'org.spongepowered:mixin:0.7.4-SNAPSHOT'
    compile 'junit:junit:4.12'
    compile 'com.google.guava:guava:21.0'
}

/*mixin {
    add sourceSets.main, "mctester.main.refmap.json"
}*/

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"

        // replace version and mcversion
        expand "version": project.version, "mcversion": project.minecraft.version
    }

    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude "mcmod.info"
    }
}

